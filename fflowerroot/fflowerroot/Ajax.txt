** web3-Ajax fetch API 사용법 **

* Ajax: 웹브라우저에서 js이용해서 웹서버에 접속하고 정보를 가져오는 방법 

* Ajax를 구현하는 여러가지 방법이 있는데 그 중에 하나가 fetch API (4년 전 기준으로 최신방법임)

* <input type="button" value="fetch" onclick = "
   fetch('파일명').then(function(response){
    response.text().then(function(text){
     alert(text);
   })
  })
 ">
 
 
 <article></article>
 <input type="button" value="fetch" onclick = "
   fetch('파일명').then(function(변수){
    변수.text().then(function(변수2){
     document.querySelector('article').innerHTML=변수2;
   })
  })
 ">


 <article></article>
 <input  type="button"  value="버튼명"  onclick= "fetch('파일명').then(function(변수1){변수1.text().then(function(변수2){
 	document.querySelector('article').innerHTML=변수2; } ) } ) " >
 : 브라우저의 버튼명을 클릭하면 브라우저는 '파일명'파일을 요청하고 서버는  '파일명'파일을 응답객체(변수1에 담긴)를 text로 변환 후 변수2에 담아서 응답하는데, 그 응답을 'article'엘리먼트 안에 담아서 브라우저에게 보여준다.
 	----> @ 요청과 응답이 한번에 ... ? 이런 경우가 fetch말고 있었나 ?
 	
 
 
 
 
* client와 server의 통신
 client의 요청 ->  fetch('파일명')  : server에게 '파일명'이라는 파일을 응답해달라는 요청을 보낸 것
 	즉 fetch(매개변수1) : 매개변수1을 요청
 then은 서버에서 응답을 받은 후 다음 코드를 실행하게 해주는 메서드. 응답을 기다리는 동안 then이 아닌 다음실행흐름은 계속된다. (비동기/동시실행/병렬식)
 
 fetch AIP의 동작방식 : Asynchronous(비동기)
 
 
 
 
 * 익명함수 : 작성된 곳에서만 사용됨
  함수의 이름이 필요한 경우 : 여기저기서 호출을 할 때
  
  코드1: function callbackMe(){ }
  코드2: callbackMe = function(){ }
 	코드1 == 코드2 

	 	
  코드1: function callbackMe(){ }
        fetch('파일명').then(callbackMe);
  
  코드2: fetch('파일명').then(function(){ });
 	
 	코드1과 2는 같은 일을 하므로 재요청하지 않는 함수는 익명함수로 작성하면 편리하다.
 
 
 
 
 * then(function(매개변수1){})
  then이 이 함수를 실행시킬 때 이 함수의 첫번째 매개변수의 값으로 response객체를 담아준다(?)
  
  
 
 * 싱글페이지 웹애플리케이션 ?
 
 * 버튼, a태그에다가 fetch메서드를 바로 쓰네 ?
	<a onclick="fetch() .. ">글자</a> 
	 <input type="button" onclick = "fetch ..">
 
 
 * html코드에서 함수호출만으로 fetch 이용하기.
 	<script></script>에서 function정의한 것 html에서 호출 가능
 	
 	<html>
 		<a onclick="fetchPage('파일이름')">문자</a>
 	</html>
 	<script>
 		function fetchPage(파일명등){
 		  fetch(파일명등).then(function(변수){
    	   변수.text().then(function(변수2){
     		document.querySelector('article').innerHTML=변수2;
 		  })
  		})
 	</script>
 
 
 
 
 * 우리는 url을 통해서 페이지를 공유하곤 한다
 	페이지 안에서 특정한 부분에 접근하고 싶다면 ?  -> 해시기능(북마크)
 	식별하고 싶은 것에 id값을 준다. 
 	-> url에 #id를 추가하면 스크롤이 자동으로 그 부분으로 움직임. 그 부분을 조각(프래그먼트)라고하고 그 id를 프래그먼트id(identifier)라고 한다.
 
 
 
 
 
 * 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 